{
  "version": 3,
  "sources": ["../../vuetify/src/components/VCard/VCard.tsx", "../../vuetify/src/components/VCard/VCardActions.tsx", "../../vuetify/src/components/VCard/VCardSubtitle.tsx", "../../vuetify/src/components/VCard/VCardTitle.ts", "../../vuetify/src/components/VAvatar/VAvatar.tsx", "../../vuetify/src/components/VImg/VImg.tsx", "../../vuetify/src/components/VResponsive/VResponsive.tsx", "../../vuetify/src/components/VCard/VCardItem.tsx", "../../vuetify/src/components/VCard/VCardText.tsx"],
  "sourcesContent": ["/* eslint-disable complexity */\n\n// Styles\nimport './VCard.sass'\n\n// Components\nimport { VCardActions } from './VCardActions'\nimport { VCardItem } from './VCardItem'\nimport { VCardText } from './VCardText'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { IconValue } from '@/composables/icons'\nimport { LoaderSlot, makeLoaderProps, useLoader } from '@/composables/loader'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VCardItemSlots } from './VCardItem'\nimport type { LoaderSlotProps } from '@/composables/loader'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\nexport const makeVCardProps = propsFactory({\n  appendAvatar: String,\n  appendIcon: IconValue,\n  disabled: Boolean,\n  flat: Boolean,\n  hover: Boolean,\n  image: String,\n  link: {\n    type: Boolean,\n    default: undefined,\n  },\n  prependAvatar: String,\n  prependIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  subtitle: [String, Number],\n  text: [String, Number],\n  title: [String, Number],\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeLoaderProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'elevated' } as const),\n}, 'VCard')\n\nexport type VCardSlots = VCardItemSlots & {\n  default: never\n  actions: never\n  text: never\n  loader: LoaderSlotProps\n  image: never\n  item: never\n}\n\nexport const VCard = genericComponent<VCardSlots>()({\n  name: 'VCard',\n\n  directives: { Ripple },\n\n  props: makeVCardProps(),\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { loaderClasses } = useLoader(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const link = useLink(props, attrs)\n\n    const isLink = computed(() => props.link !== false && link.isLink.value)\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (props.link || link.isClickable.value)\n    )\n\n    useRender(() => {\n      const Tag = isLink.value ? 'a' : props.tag\n      const hasTitle = !!(slots.title || props.title != null)\n      const hasSubtitle = !!(slots.subtitle || props.subtitle != null)\n      const hasHeader = hasTitle || hasSubtitle\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon)\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon)\n      const hasImage = !!(slots.image || props.image)\n      const hasCardItem = hasHeader || hasPrepend || hasAppend\n      const hasText = !!(slots.text || props.text != null)\n\n      return (\n        <Tag\n          class={[\n            'v-card',\n            {\n              'v-card--disabled': props.disabled,\n              'v-card--flat': props.flat,\n              'v-card--hover': props.hover && !(props.disabled || props.flat),\n              'v-card--link': isClickable.value,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            loaderClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n            props.class,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n            locationStyles.value,\n            props.style,\n          ]}\n          onClick={ isClickable.value && link.navigate }\n          v-ripple={ isClickable.value && props.ripple }\n          tabindex={ props.disabled ? -1 : undefined }\n          { ...link.linkProps }\n        >\n          { hasImage && (\n            <div key=\"image\" class=\"v-card__image\">\n              { !slots.image ? (\n                <VImg\n                  key=\"image-img\"\n                  cover\n                  src={ props.image }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"image-defaults\"\n                  disabled={ !props.image }\n                  defaults={{\n                    VImg: {\n                      cover: true,\n                      src: props.image,\n                    },\n                  }}\n                  v-slots:default={ slots.image }\n                />\n              )}\n            </div>\n          )}\n\n          <LoaderSlot\n            name=\"v-card\"\n            active={ !!props.loading }\n            color={ typeof props.loading === 'boolean' ? undefined : props.loading }\n            v-slots={{ default: slots.loader }}\n          />\n\n          { hasCardItem && (\n            <VCardItem\n              key=\"item\"\n              prependAvatar={ props.prependAvatar }\n              prependIcon={ props.prependIcon }\n              title={ props.title }\n              subtitle={ props.subtitle }\n              appendAvatar={ props.appendAvatar }\n              appendIcon={ props.appendIcon }\n            >\n              {{\n                default: slots.item,\n                prepend: slots.prepend,\n                title: slots.title,\n                subtitle: slots.subtitle,\n                append: slots.append,\n              }}\n            </VCardItem>\n          )}\n\n          { hasText && (\n            <VCardText key=\"text\">\n              { slots.text?.() ?? props.text }\n            </VCardText>\n          )}\n\n          { slots.default?.() }\n\n          { slots.actions && (\n            <VCardActions v-slots={{ default: slots.actions }} />\n          )}\n\n          { genOverlays(isClickable.value, 'v-card') }\n        </Tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCard = InstanceType<typeof VCard>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { genericComponent, useRender } from '@/util'\n\nexport const VCardActions = genericComponent()({\n  name: 'VCardActions',\n\n  props: makeComponentProps(),\n\n  setup (props, { slots }) {\n    provideDefaults({\n      VBtn: {\n        slim: true,\n        variant: 'text',\n      },\n    })\n\n    useRender(() => (\n      <div\n        class={[\n          'v-card-actions',\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        { slots.default?.() }\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VCardActions = InstanceType<typeof VCardActions>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVCardSubtitleProps = propsFactory({\n  opacity: [Number, String],\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VCardSubtitle')\n\nexport const VCardSubtitle = genericComponent()({\n  name: 'VCardSubtitle',\n\n  props: makeVCardSubtitleProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-card-subtitle',\n          props.class,\n        ]}\n        style={[\n          { '--v-card-subtitle-opacity': props.opacity },\n          props.style,\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VCardSubtitle = InstanceType<typeof VCardSubtitle>\n", "// Utilities\nimport { createSimpleFunctional } from '@/util'\n\nexport const VCardTitle = createSimpleFunctional('v-card-title')\n\nexport type VCardTitle = InstanceType<typeof VCardTitle>\n", "// Styles\nimport './VAvatar.sass'\n\n// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVAvatarProps = propsFactory({\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n  image: String,\n  text: String,\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeSizeProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'flat' } as const),\n}, 'VAvatar')\n\nexport const VAvatar = genericComponent()({\n  name: 'VAvatar',\n\n  props: makeVAvatarProps(),\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses, sizeStyles } = useSize(props)\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-avatar',\n          {\n            'v-avatar--start': props.start,\n            'v-avatar--end': props.end,\n          },\n          themeClasses.value,\n          borderClasses.value,\n          colorClasses.value,\n          densityClasses.value,\n          roundedClasses.value,\n          sizeClasses.value,\n          variantClasses.value,\n          props.class,\n        ]}\n        style={[\n          colorStyles.value,\n          sizeStyles.value,\n          props.style,\n        ]}\n      >\n        { !slots.default ? (\n          props.image\n            ? (<VImg key=\"image\" src={ props.image } alt=\"\" cover />)\n            : props.icon\n              ? (<VIcon key=\"icon\" icon={ props.icon } />)\n              : props.text\n        ) : (\n          <VDefaultsProvider\n            key=\"content-defaults\"\n            defaults={{\n              VImg: {\n                cover: true,\n                src: props.image,\n              },\n              VIcon: {\n                icon: props.icon,\n              },\n            }}\n          >\n            { slots.default() }\n          </VDefaultsProvider>\n        )}\n\n        { genOverlays(false, 'v-avatar') }\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VAvatar = InstanceType<typeof VAvatar>\n", "// Styles\nimport './VImg.sass'\n\n// Components\nimport { makeVResponsiveProps, VResponsive } from '@/components/VResponsive/VResponsive'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Directives\nimport intersect from '@/directives/intersect'\n\n// Utilities\nimport {\n  computed,\n  nextTick,\n  onBeforeMount,\n  onBeforeUnmount,\n  ref,\n  shallowRef,\n  toRef,\n  vShow,\n  watch,\n  withDirectives,\n} from 'vue'\nimport {\n  convertToUnit,\n  genericComponent,\n  getCurrentInstance,\n  propsFactory,\n  SUPPORTS_INTERSECTION,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\n// not intended for public use, this is passed in by vuetify-loader\nexport interface srcObject {\n  src?: string\n  srcset?: string\n  lazySrc?: string\n  aspect: number\n}\n\nexport type VImgSlots = {\n  default: never\n  placeholder: never\n  error: never\n  sources: never\n}\n\nexport const makeVImgProps = propsFactory({\n  absolute: Boolean,\n  alt: String,\n  cover: Boolean,\n  color: String,\n  draggable: {\n    type: [Boolean, String] as PropType<boolean | 'true' | 'false'>,\n    default: undefined,\n  },\n  eager: Boolean,\n  gradient: String,\n  lazySrc: String,\n  options: {\n    type: Object as PropType<IntersectionObserverInit>,\n    // For more information on types, navigate to:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n    default: () => ({\n      root: undefined,\n      rootMargin: undefined,\n      threshold: undefined,\n    }),\n  },\n  sizes: String,\n  src: {\n    type: [String, Object] as PropType<string | srcObject>,\n    default: '',\n  },\n  crossorigin: String as PropType<'' | 'anonymous' | 'use-credentials'>,\n  referrerpolicy: String as PropType<\n    | 'no-referrer'\n    | 'no-referrer-when-downgrade'\n    | 'origin'\n    | 'origin-when-cross-origin'\n    | 'same-origin'\n    | 'strict-origin'\n    | 'strict-origin-when-cross-origin'\n    | 'unsafe-url'\n  >,\n  srcset: String,\n  position: String,\n\n  ...makeVResponsiveProps(),\n  ...makeComponentProps(),\n  ...makeRoundedProps(),\n  ...makeTransitionProps(),\n}, 'VImg')\n\nexport const VImg = genericComponent<VImgSlots>()({\n  name: 'VImg',\n\n  directives: { intersect },\n\n  props: makeVImgProps(),\n\n  emits: {\n    loadstart: (value: string | undefined) => true,\n    load: (value: string | undefined) => true,\n    error: (value: string | undefined) => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { roundedClasses } = useRounded(props)\n    const vm = getCurrentInstance('VImg')\n\n    const currentSrc = shallowRef('') // Set from srcset\n    const image = ref<HTMLImageElement>()\n    const state = shallowRef<'idle' | 'loading' | 'loaded' | 'error'>(props.eager ? 'loading' : 'idle')\n    const naturalWidth = shallowRef<number>()\n    const naturalHeight = shallowRef<number>()\n\n    const normalisedSrc = computed<srcObject>(() => {\n      return props.src && typeof props.src === 'object'\n        ? {\n          src: props.src.src,\n          srcset: props.srcset || props.src.srcset,\n          lazySrc: props.lazySrc || props.src.lazySrc,\n          aspect: Number(props.aspectRatio || props.src.aspect || 0),\n        } : {\n          src: props.src,\n          srcset: props.srcset,\n          lazySrc: props.lazySrc,\n          aspect: Number(props.aspectRatio || 0),\n        }\n    })\n    const aspectRatio = computed(() => {\n      return normalisedSrc.value.aspect || naturalWidth.value! / naturalHeight.value! || 0\n    })\n\n    watch(() => props.src, () => {\n      init(state.value !== 'idle')\n    })\n    watch(aspectRatio, (val, oldVal) => {\n      if (!val && oldVal && image.value) {\n        pollForSize(image.value)\n      }\n    })\n\n    // TODO: getSrc when window width changes\n\n    onBeforeMount(() => init())\n\n    function init (isIntersecting?: boolean) {\n      if (props.eager && isIntersecting) return\n      if (\n        SUPPORTS_INTERSECTION &&\n        !isIntersecting &&\n        !props.eager\n      ) return\n\n      state.value = 'loading'\n\n      if (normalisedSrc.value.lazySrc) {\n        const lazyImg = new Image()\n        lazyImg.src = normalisedSrc.value.lazySrc\n        pollForSize(lazyImg, null)\n      }\n\n      if (!normalisedSrc.value.src) return\n\n      nextTick(() => {\n        emit('loadstart', image.value?.currentSrc || normalisedSrc.value.src)\n\n        setTimeout(() => {\n          if (vm.isUnmounted) return\n\n          if (image.value?.complete) {\n            if (!image.value.naturalWidth) {\n              onError()\n            }\n\n            if (state.value === 'error') return\n\n            if (!aspectRatio.value) pollForSize(image.value, null)\n            if (state.value === 'loading') onLoad()\n          } else {\n            if (!aspectRatio.value) pollForSize(image.value!)\n            getSrc()\n          }\n        })\n      })\n    }\n\n    function onLoad () {\n      if (vm.isUnmounted) return\n\n      getSrc()\n      pollForSize(image.value!)\n      state.value = 'loaded'\n      emit('load', image.value?.currentSrc || normalisedSrc.value.src)\n    }\n\n    function onError () {\n      if (vm.isUnmounted) return\n\n      state.value = 'error'\n      emit('error', image.value?.currentSrc || normalisedSrc.value.src)\n    }\n\n    function getSrc () {\n      const img = image.value\n      if (img) currentSrc.value = img.currentSrc || img.src\n    }\n\n    let timer = -1\n\n    onBeforeUnmount(() => {\n      clearTimeout(timer)\n    })\n\n    function pollForSize (img: HTMLImageElement, timeout: number | null = 100) {\n      const poll = () => {\n        clearTimeout(timer)\n        if (vm.isUnmounted) return\n\n        const { naturalHeight: imgHeight, naturalWidth: imgWidth } = img\n\n        if (imgHeight || imgWidth) {\n          naturalWidth.value = imgWidth\n          naturalHeight.value = imgHeight\n        } else if (!img.complete && state.value === 'loading' && timeout != null) {\n          timer = window.setTimeout(poll, timeout)\n        } else if (img.currentSrc.endsWith('.svg') || img.currentSrc.startsWith('data:image/svg+xml')) {\n          naturalWidth.value = 1\n          naturalHeight.value = 1\n        }\n      }\n\n      poll()\n    }\n\n    const containClasses = computed(() => ({\n      'v-img__img--cover': props.cover,\n      'v-img__img--contain': !props.cover,\n    }))\n\n    const __image = () => {\n      if (!normalisedSrc.value.src || state.value === 'idle') return null\n\n      const img = (\n        <img\n          class={['v-img__img', containClasses.value]}\n          style={{ objectPosition: props.position }}\n          src={ normalisedSrc.value.src }\n          srcset={ normalisedSrc.value.srcset }\n          alt={ props.alt }\n          crossorigin={ props.crossorigin }\n          referrerpolicy={ props.referrerpolicy }\n          draggable={ props.draggable }\n          sizes={ props.sizes }\n          ref={ image }\n          onLoad={ onLoad }\n          onError={ onError }\n        />\n      )\n\n      const sources = slots.sources?.()\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          {\n            withDirectives(\n              sources\n                ? <picture class=\"v-img__picture\">{ sources }{ img }</picture>\n                : img,\n              [[vShow, state.value === 'loaded']]\n            )\n          }\n        </MaybeTransition>\n      )\n    }\n\n    const __preloadImage = () => (\n      <MaybeTransition transition={ props.transition }>\n        { normalisedSrc.value.lazySrc && state.value !== 'loaded' && (\n          <img\n            class={['v-img__img', 'v-img__img--preload', containClasses.value]}\n            style={{ objectPosition: props.position }}\n            src={ normalisedSrc.value.lazySrc }\n            alt={ props.alt }\n            crossorigin={ props.crossorigin }\n            referrerpolicy={ props.referrerpolicy }\n            draggable={ props.draggable }\n          />\n        )}\n      </MaybeTransition>\n    )\n\n    const __placeholder = () => {\n      if (!slots.placeholder) return null\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          { (state.value === 'loading' || (state.value === 'error' && !slots.error)) &&\n          <div class=\"v-img__placeholder\">{ slots.placeholder() }</div>\n          }\n        </MaybeTransition>\n      )\n    }\n\n    const __error = () => {\n      if (!slots.error) return null\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          { state.value === 'error' &&\n            <div class=\"v-img__error\">{ slots.error() }</div>\n          }\n        </MaybeTransition>\n      )\n    }\n\n    const __gradient = () => {\n      if (!props.gradient) return null\n\n      return <div class=\"v-img__gradient\" style={{ backgroundImage: `linear-gradient(${props.gradient})` }} />\n    }\n\n    const isBooted = shallowRef(false)\n    {\n      const stop = watch(aspectRatio, val => {\n        if (val) {\n          // Doesn't work with nextTick, idk why\n          requestAnimationFrame(() => {\n            requestAnimationFrame(() => {\n              isBooted.value = true\n            })\n          })\n          stop()\n        }\n      })\n    }\n\n    useRender(() => {\n      const responsiveProps = VResponsive.filterProps(props)\n      return (\n        <VResponsive\n          class={[\n            'v-img',\n            {\n              'v-img--absolute': props.absolute,\n              'v-img--booting': !isBooted.value,\n            },\n            backgroundColorClasses.value,\n            roundedClasses.value,\n            props.class,\n          ]}\n          style={[\n            { width: convertToUnit(props.width === 'auto' ? naturalWidth.value : props.width) },\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n          { ...responsiveProps }\n          aspectRatio={ aspectRatio.value }\n          aria-label={ props.alt }\n          role={ props.alt ? 'img' : undefined }\n          v-intersect={[{\n            handler: init,\n            options: props.options,\n          }, null, ['once']]}\n        >{{\n          additional: () => (\n            <>\n              <__image />\n              <__preloadImage />\n              <__gradient />\n              <__placeholder />\n              <__error />\n            </>\n          ),\n          default: slots.default,\n        }}</VResponsive>\n      )\n    })\n\n    return {\n      currentSrc,\n      image,\n      state,\n      naturalWidth,\n      naturalHeight,\n    }\n  },\n})\n\nexport type VImg = InstanceType<typeof VImg>\n", "// Styles\nimport './VResponsive.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport type VResponsiveSlots = {\n  default: never\n  additional: never\n}\n\nexport function useAspectStyles (props: { aspectRatio?: string | number }) {\n  return {\n    aspectStyles: computed(() => {\n      const ratio = Number(props.aspectRatio)\n\n      return ratio\n        ? { paddingBottom: String(1 / ratio * 100) + '%' }\n        : undefined\n    }),\n  }\n}\n\nexport const makeVResponsiveProps = propsFactory({\n  aspectRatio: [String, Number],\n  contentClass: null,\n  inline: Boolean,\n\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n}, 'VResponsive')\n\nexport const VResponsive = genericComponent<VResponsiveSlots>()({\n  name: 'VResponsive',\n\n  props: makeVResponsiveProps(),\n\n  setup (props, { slots }) {\n    const { aspectStyles } = useAspectStyles(props)\n    const { dimensionStyles } = useDimension(props)\n\n    useRender(() => (\n      <div\n        class={[\n          'v-responsive',\n          { 'v-responsive--inline': props.inline },\n          props.class,\n        ]}\n        style={[\n          dimensionStyles.value,\n          props.style,\n        ]}\n      >\n        <div class=\"v-responsive__sizer\" style={ aspectStyles.value } />\n\n        { slots.additional?.() }\n\n        { slots.default && (\n          <div class={['v-responsive__content', props.contentClass]}>{ slots.default() }</div>\n        )}\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VResponsive = InstanceType<typeof VResponsive>\n", "// Components\nimport { VCardSubtitle } from './VCardSubtitle'\nimport { VCardTitle } from './VCardTitle'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport type VCardItemSlots = {\n  default: never\n  prepend: never\n  append: never\n  title: never\n  subtitle: never\n}\n\nexport const makeCardItemProps = propsFactory({\n  appendAvatar: String,\n  appendIcon: IconValue,\n  prependAvatar: String,\n  prependIcon: IconValue,\n  subtitle: [String, Number],\n  title: [String, Number],\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n}, 'VCardItem')\n\nexport const VCardItem = genericComponent<VCardItemSlots>()({\n  name: 'VCardItem',\n\n  props: makeCardItemProps(),\n\n  setup (props, { slots }) {\n    useRender(() => {\n      const hasPrependMedia = !!(props.prependAvatar || props.prependIcon)\n      const hasPrepend = !!(hasPrependMedia || slots.prepend)\n      const hasAppendMedia = !!(props.appendAvatar || props.appendIcon)\n      const hasAppend = !!(hasAppendMedia || slots.append)\n      const hasTitle = !!(props.title != null || slots.title)\n      const hasSubtitle = !!(props.subtitle != null || slots.subtitle)\n\n      return (\n        <div\n          class={[\n            'v-card-item',\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-card-item__prepend\">\n              { !slots.prepend ? (\n                <>\n                  { props.prependAvatar && (\n                    <VAvatar\n                      key=\"prepend-avatar\"\n                      density={ props.density }\n                      image={ props.prependAvatar }\n                    />\n                  )}\n\n                  { props.prependIcon && (\n                    <VIcon\n                      key=\"prepend-icon\"\n                      density={ props.density }\n                      icon={ props.prependIcon }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !hasPrependMedia }\n                  defaults={{\n                    VAvatar: {\n                      density: props.density,\n                      image: props.prependAvatar,\n                    },\n                    VIcon: {\n                      density: props.density,\n                      icon: props.prependIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </div>\n          )}\n\n          <div class=\"v-card-item__content\">\n            { hasTitle && (\n              <VCardTitle key=\"title\">\n                { slots.title?.() ?? props.title }\n              </VCardTitle>\n            )}\n\n            { hasSubtitle && (\n              <VCardSubtitle key=\"subtitle\">\n                { slots.subtitle?.() ?? props.subtitle }\n              </VCardSubtitle>\n            )}\n\n            { slots.default?.() }\n          </div>\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-card-item__append\">\n              { !slots.append ? (\n                <>\n                  { props.appendIcon && (\n                    <VIcon\n                      key=\"append-icon\"\n                      density={ props.density }\n                      icon={ props.appendIcon }\n                    />\n                  )}\n\n                  { props.appendAvatar && (\n                    <VAvatar\n                      key=\"append-avatar\"\n                      density={ props.density }\n                      image={ props.appendAvatar }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !hasAppendMedia }\n                  defaults={{\n                    VAvatar: {\n                      density: props.density,\n                      image: props.appendAvatar,\n                    },\n                    VIcon: {\n                      density: props.density,\n                      icon: props.appendIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.append }\n                />\n              )}\n           </div>\n          )}\n        </div>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCardItem = InstanceType<typeof VCardItem>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVCardTextProps = propsFactory({\n  opacity: [Number, String],\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VCardText')\n\nexport const VCardText = genericComponent()({\n  name: 'VCardText',\n\n  props: makeVCardTextProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-card-text',\n          props.class,\n        ]}\n        style={[\n          { '--v-card-text-opacity': props.opacity },\n          props.style,\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VCardText = InstanceType<typeof VCardText>\n"],
  "mappings": "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",
  "names": ["VCardActions", "genericComponent", "name", "props", "makeComponentProps", "setup", "_ref", "slots", "provideDefaults", "VBtn", "slim", "variant", "useRender", "_createVNode", "class", "style", "default", "makeVCardSubtitleProps", "propsFactory", "opacity", "Number", "String", "makeComponentProps", "makeTagProps", "VCardSubtitle", "genericComponent", "name", "props", "setup", "_ref", "slots", "useRender", "_createVNode", "tag", "class", "style", "VCardTitle", "createSimpleFunctional", "useAspectStyles", "props", "aspectStyles", "computed", "ratio", "Number", "aspectRatio", "paddingBottom", "String", "undefined", "makeVResponsiveProps", "propsFactory", "contentClass", "inline", "Boolean", "makeComponentProps", "makeDimensionProps", "VResponsive", "genericComponent", "name", "setup", "_ref", "slots", "dimensionStyles", "useDimension", "useRender", "_createVNode", "class", "value", "style", "additional", "default", "makeVImgProps", "propsFactory", "absolute", "Boolean", "alt", "String", "cover", "color", "draggable", "type", "default", "undefined", "eager", "gradient", "lazySrc", "options", "Object", "root", "rootMargin", "threshold", "sizes", "src", "crossorigin", "referrerpolicy", "srcset", "position", "makeVResponsiveProps", "makeComponentProps", "makeRoundedProps", "makeTransitionProps", "VImg", "genericComponent", "name", "directives", "intersect", "props", "emits", "loadstart", "value", "load", "error", "setup", "_ref", "emit", "slots", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "toRef", "roundedClasses", "useRounded", "vm", "getCurrentInstance", "currentSrc", "shallowRef", "image", "ref", "state", "naturalWidth", "naturalHeight", "normalisedSrc", "computed", "aspect", "Number", "aspectRatio", "watch", "init", "val", "oldVal", "pollForSize", "onBeforeMount", "isIntersecting", "SUPPORTS_INTERSECTION", "lazyImg", "Image", "nextTick", "setTimeout", "isUnmounted", "complete", "onError", "onLoad", "getSrc", "img", "timer", "onBeforeUnmount", "clearTimeout", "timeout", "arguments", "length", "poll", "imgHeight", "imgWidth", "window", "endsWith", "startsWith", "containClasses", "__image", "_createVNode", "objectPosition", "sources", "MaybeTransition", "transition", "withDirectives", "vShow", "__preloadImage", "__placeholder", "placeholder", "__error", "__gradient", "backgroundImage", "isBooted", "stop", "requestAnimationFrame", "useRender", "responsiveProps", "VResponsive", "filterProps", "_withDirectives", "_mergeProps", "class", "width", "convertToUnit", "style", "additional", "_Fragment", "_resolveDirective", "handler", "once", "makeVAvatarProps", "propsFactory", "start", "Boolean", "end", "icon", "IconValue", "image", "String", "text", "makeBorderProps", "makeComponentProps", "makeDensityProps", "makeRoundedProps", "makeSizeProps", "makeTagProps", "makeThemeProps", "makeVariantProps", "variant", "VAvatar", "genericComponent", "name", "props", "setup", "_ref", "slots", "themeClasses", "provideTheme", "borderClasses", "useBorder", "colorClasses", "colorStyles", "variantClasses", "useVariant", "densityClasses", "useDensity", "roundedClasses", "useRounded", "sizeClasses", "sizeStyles", "useSize", "useRender", "_createVNode", "tag", "value", "class", "style", "default", "VImg", "VIcon", "VDefaultsProvider", "cover", "src", "genOverlays", "makeCardItemProps", "propsFactory", "appendAvatar", "String", "appendIcon", "IconValue", "prependAvatar", "prependIcon", "subtitle", "Number", "title", "makeComponentProps", "makeDensityProps", "VCardItem", "genericComponent", "name", "props", "setup", "_ref", "slots", "useRender", "hasPrependMedia", "hasPrepend", "prepend", "hasAppendMedia", "hasAppend", "append", "hasTitle", "hasSubtitle", "_createVNode", "class", "style", "_Fragment", "VAvatar", "density", "VIcon", "VDefaultsProvider", "image", "icon", "VCardTitle", "default", "VCardSubtitle", "makeVCardTextProps", "propsFactory", "opacity", "Number", "String", "makeComponentProps", "makeTagProps", "VCardText", "genericComponent", "name", "props", "setup", "_ref", "slots", "useRender", "_createVNode", "tag", "class", "style", "makeVCardProps", "propsFactory", "appendAvatar", "String", "appendIcon", "IconValue", "disabled", "Boolean", "flat", "hover", "image", "link", "type", "default", "undefined", "prependAvatar", "prependIcon", "ripple", "Object", "subtitle", "Number", "text", "title", "makeBorderProps", "makeComponentProps", "makeDensityProps", "makeDimensionProps", "makeElevationProps", "makeLoaderProps", "makeLocationProps", "makePositionProps", "makeRoundedProps", "makeRouterProps", "makeTagProps", "makeThemeProps", "makeVariantProps", "variant", "VCard", "genericComponent", "name", "directives", "Ripple", "props", "setup", "_ref", "attrs", "slots", "themeClasses", "provideTheme", "borderClasses", "useBorder", "colorClasses", "colorStyles", "variantClasses", "useVariant", "densityClasses", "useDensity", "dimensionStyles", "useDimension", "elevationClasses", "useElevation", "loaderClasses", "useLoader", "locationStyles", "useLocation", "positionClasses", "usePosition", "roundedClasses", "useRounded", "useLink", "isLink", "computed", "value", "isClickable", "useRender", "Tag", "tag", "hasTitle", "hasSubtitle", "hasHeader", "hasAppend", "append", "hasPrepend", "prepend", "hasImage", "hasCardItem", "hasText", "_withDirectives", "_createVNode", "_mergeProps", "class", "style", "navigate", "linkProps", "VImg", "VDefaultsProvider", "cover", "src", "LoaderSlot", "loading", "loader", "VCardItem", "item", "VCardText", "actions", "VCardActions", "genOverlays", "_resolveDirective"]
}
